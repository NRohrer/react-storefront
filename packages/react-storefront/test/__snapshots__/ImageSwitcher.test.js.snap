// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ImageSwitcher only shows images by default, no bells and whistles 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-ImageSwitcher-with-app) images={{...}}>
        <inject-ImageSwitcher-with-app images={{...}} classes={{...}}>
          <ImageSwitcher images={{...}} classes={{...}} app={{...}} thumbnails={{...}} viewerThumbnailsOnly={false} arrows={true} indicators={false} loadingThumbnailProps={{...}} imageProps={{...}} resetSelectionWhenImagesChange={false} reactPinchZoomPanOptions={{...}}>
            <div className="RSFImageSwitcher-root-1" style={[undefined]}>
              <div className="RSFImageSwitcher-swipeWrap-2">
                <ReactSwipableView index={0} onChangeIndex={[Function: onChangeIndex]} animateHeight={false} animateTransitions={true} axis="x" disabled={false} disableLazyLoading={false} enableMouseEvents={false} hysteresis={0.6} ignoreNativeScroll={false} threshold={5} springConfig={{...}} resistance={false}>
                  <div style={{...}} onTouchStart={[Function]} onTouchEnd={[Function]} onScroll={[Function]}>
                    <div style={{...}} className="react-swipeable-view-container">
                      <div style={{...}} className={[undefined]} aria-hidden={false} data-swipeable="true">
                        <div className="RSFImageSwitcher-imageWrap-3">
                          <WithStyles(inject-Image) notFoundSrc={[undefined]} src="/a.jpg" alt="product" onLoad={[Function]}>
                            <inject-Image notFoundSrc={[undefined]} src="/a.jpg" alt="product" onLoad={[Function]} classes={{...}}>
                              <Image notFoundSrc={[undefined]} src="/a.jpg" alt="product" onLoad={[Function]} classes={{...}} amp={false} quality={{...}} contain={false} fill={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                <div className="RSFImage-root-26">
                                  <img src="/a.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt="product" onLoad={[Function]} onError={[Function]} />
                                </div>
                              </Image>
                            </inject-Image>
                          </WithStyles(inject-Image)>
                        </div>
                      </div>
                    </div>
                  </div>
                </ReactSwipableView>
                <div className="RSFImageSwitcher-arrows-10">
                  <WithStyles(IconButton) className="RSFImageSwitcher-arrow-11 RSFImageSwitcher-rightArrow-13" onClick={[Function: onClick]}>
                    <IconButton className="RSFImageSwitcher-arrow-11 RSFImageSwitcher-rightArrow-13" onClick={[Function: onClick]} classes={{...}} color="default" disabled={false}>
                      <WithStyles(ButtonBase) className="MuiIconButton-root-30 RSFImageSwitcher-arrow-11 RSFImageSwitcher-rightArrow-13" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]}>
                        <ButtonBase className="MuiIconButton-root-30 RSFImageSwitcher-arrow-11 RSFImageSwitcher-rightArrow-13" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]} classes={{...}} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                          <button className="MuiButtonBase-root-36 MuiIconButton-root-30 RSFImageSwitcher-arrow-11 RSFImageSwitcher-rightArrow-13" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function: onClick]}>
                            <span className="MuiIconButton-label-35">
                              <pure(ChevronRightIcon) classes={{...}}>
                                <ChevronRightIcon classes={{...}}>
                                  <WithStyles(SvgIcon) classes={{...}}>
                                    <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                      <svg className="MuiSvgIcon-root-39 RSFImageSwitcher-icon-14" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                        <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                        <path fill="none" d="M0 0h24v24H0z" />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ChevronRightIcon>
                              </pure(ChevronRightIcon)>
                            </span>
                            <NoSsr defer={false} fallback={{...}}>
                              <WithStyles(TouchRipple) innerRef={[Function]} center={true}>
                                <TouchRipple center={true} classes={{...}}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-48" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-48" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </NoSsr>
                          </button>
                        </ButtonBase>
                      </WithStyles(ButtonBase)>
                    </IconButton>
                  </WithStyles(IconButton)>
                </div>
                <Portal disablePortal={false}>
                  <Portal containerInfo={{...}}>
                    <div className="RSFImageSwitcher-viewerOverlay-20">
                      <ReactPinchZoomPan maxScale={3} render={[Function: render]} initialScale={1}>
                        <div>
                          <div style={{...}}>
                            <div style={{...}}>
                              <img src="/a.jpg" alt="product" style={{...}} />
                            </div>
                          </div>
                        </div>
                      </ReactPinchZoomPan>
                    </div>
                  </Portal>
                </Portal>
                <div onClick={[Function: onClick]} className="RSFImageSwitcher-viewerToggle-18">
                  <svg width="100" height="100" viewBox="0 0 100 100">
                    <line x1="50" y1="25" x2="50" y2="75" strokeWidth="4" stroke="white" />
                    <line x1="25" y1="50" x2="75" y2="50" strokeWidth="4" stroke="white" />
                  </svg>
                </div>
              </div>
            </div>
          </ImageSwitcher>
        </inject-ImageSwitcher-with-app>
      </WithStyles(inject-ImageSwitcher-with-app)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`ImageSwitcher should render AmpImageSwitcher when amp=true 1`] = `
<TestProvider app={{...}} nextId={[Function: nextId]}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <inject-AmpState>
        <AmpState amp={true} initialState={{...}} id="moovAmpState">
          <Provider ampStateId="moovAmpState">
            <HelmetWrapper defer={true} encodeSpecialCharacters={true}>
              <SideEffect(NullComponent) defer={true} encodeSpecialCharacters={true} script={{...}}>
                <NullComponent defer={true} encodeSpecialCharacters={true} script={{...}} />
              </SideEffect(NullComponent)>
            </HelmetWrapper>
            <amp-state id="moovAmpState">
              <script type="application/json" dangerouslySetInnerHTML={{...}} />
            </amp-state>
            <WithStyles(inject-ImageSwitcher-with-app) images={{...}}>
              <inject-ImageSwitcher-with-app images={{...}} classes={{...}}>
                <ImageSwitcher images={{...}} classes={{...}} app={{...}} thumbnails={{...}} viewerThumbnailsOnly={false} arrows={true} indicators={false} loadingThumbnailProps={{...}} imageProps={{...}} resetSelectionWhenImagesChange={false} reactPinchZoomPanOptions={{...}}>
                  <WithStyles(inject-AmpImageSwitcher-with-nextId-ampStateId) images={{...}} thumbnails={{...}} className={[undefined]} classes={{...}} arrows={true} indicators={false}>
                    <inject-AmpImageSwitcher-with-nextId-ampStateId images={{...}} thumbnails={{...}} className={[undefined]} arrows={true} indicators={false} classes={{...}}>
                      <AmpImageSwitcher images={{...}} thumbnails={{...}} className={[undefined]} arrows={true} indicators={false} classes={{...}} nextId={[Function: nextId]} ampStateId="moovAmpState" type="slides" ampStateProperty="selectedImage" controls={false}>
                        <div className="RSFAmpImageSwitcher-root-274 RSFImageSwitcher-root-249 RSFAmpImageSwitcher-rootImportant-275">
                          <HelmetWrapper defer={true} encodeSpecialCharacters={true}>
                            <SideEffect(NullComponent) defer={true} encodeSpecialCharacters={true} script={{...}}>
                              <NullComponent defer={true} encodeSpecialCharacters={true} script={{...}} />
                            </SideEffect(NullComponent)>
                          </HelmetWrapper>
                          <div className="RSFAmpImageSwitcher-carouselWrap-276">
                            <amp-carousel controls={true} id="1" layout="fill" type="slides" amp-bind="slide=>moovAmpState.selectedImage" on="slideChange:AMP.setState({ moovAmpState: { selectedImage: event.index } })">
                              <amp-img lightbox={true} src="/a.jpg" layout="fill" alt="product" />
                              <amp-img lightbox={true} src="/b.jpg" layout="fill" alt="product" />
                              <amp-img lightbox={true} src="/c.jpg" layout="fill" alt="product" />
                            </amp-carousel>
                          </div>
                        </div>
                      </AmpImageSwitcher>
                    </inject-AmpImageSwitcher-with-nextId-ampStateId>
                  </WithStyles(inject-AmpImageSwitcher-with-nextId-ampStateId)>
                </ImageSwitcher>
              </inject-ImageSwitcher-with-app>
            </WithStyles(inject-ImageSwitcher-with-app)>
          </Provider>
        </AmpState>
      </inject-AmpState>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`ImageSwitcher should render arrows 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-ImageSwitcher-with-app) images={{...}} arrows={true}>
        <inject-ImageSwitcher-with-app images={{...}} arrows={true} classes={{...}}>
          <ImageSwitcher images={{...}} arrows={true} classes={{...}} app={{...}} thumbnails={{...}} viewerThumbnailsOnly={false} indicators={false} loadingThumbnailProps={{...}} imageProps={{...}} resetSelectionWhenImagesChange={false} reactPinchZoomPanOptions={{...}}>
            <div className="RSFImageSwitcher-root-141" style={[undefined]}>
              <div className="RSFImageSwitcher-swipeWrap-142">
                <ReactSwipableView index={0} onChangeIndex={[Function: onChangeIndex]} animateHeight={false} animateTransitions={true} axis="x" disabled={false} disableLazyLoading={false} enableMouseEvents={false} hysteresis={0.6} ignoreNativeScroll={false} threshold={5} springConfig={{...}} resistance={false}>
                  <div style={{...}} onTouchStart={[Function]} onTouchEnd={[Function]} onScroll={[Function]}>
                    <div style={{...}} className="react-swipeable-view-container">
                      <div style={{...}} className={[undefined]} aria-hidden={false} data-swipeable="true">
                        <div className="RSFImageSwitcher-imageWrap-143">
                          <WithStyles(inject-Image) notFoundSrc={[undefined]} src="/a.jpg" alt="product" onLoad={[Function]}>
                            <inject-Image notFoundSrc={[undefined]} src="/a.jpg" alt="product" onLoad={[Function]} classes={{...}}>
                              <Image notFoundSrc={[undefined]} src="/a.jpg" alt="product" onLoad={[Function]} classes={{...}} amp={false} quality={{...}} contain={false} fill={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                <div className="RSFImage-root-166">
                                  <img src="/a.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt="product" onLoad={[Function]} onError={[Function]} />
                                </div>
                              </Image>
                            </inject-Image>
                          </WithStyles(inject-Image)>
                        </div>
                      </div>
                    </div>
                  </div>
                </ReactSwipableView>
                <div className="RSFImageSwitcher-arrows-150">
                  <WithStyles(IconButton) className="RSFImageSwitcher-arrow-151 RSFImageSwitcher-rightArrow-153" onClick={[Function: onClick]}>
                    <IconButton className="RSFImageSwitcher-arrow-151 RSFImageSwitcher-rightArrow-153" onClick={[Function: onClick]} classes={{...}} color="default" disabled={false}>
                      <WithStyles(ButtonBase) className="MuiIconButton-root-170 RSFImageSwitcher-arrow-151 RSFImageSwitcher-rightArrow-153" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]}>
                        <ButtonBase className="MuiIconButton-root-170 RSFImageSwitcher-arrow-151 RSFImageSwitcher-rightArrow-153" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]} classes={{...}} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                          <button className="MuiButtonBase-root-176 MuiIconButton-root-170 RSFImageSwitcher-arrow-151 RSFImageSwitcher-rightArrow-153" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function: onClick]}>
                            <span className="MuiIconButton-label-175">
                              <pure(ChevronRightIcon) classes={{...}}>
                                <ChevronRightIcon classes={{...}}>
                                  <WithStyles(SvgIcon) classes={{...}}>
                                    <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                      <svg className="MuiSvgIcon-root-179 RSFImageSwitcher-icon-154" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                        <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                        <path fill="none" d="M0 0h24v24H0z" />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ChevronRightIcon>
                              </pure(ChevronRightIcon)>
                            </span>
                            <NoSsr defer={false} fallback={{...}}>
                              <WithStyles(TouchRipple) innerRef={[Function]} center={true}>
                                <TouchRipple center={true} classes={{...}}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-188" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-188" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </NoSsr>
                          </button>
                        </ButtonBase>
                      </WithStyles(ButtonBase)>
                    </IconButton>
                  </WithStyles(IconButton)>
                </div>
                <Portal disablePortal={false}>
                  <Portal containerInfo={{...}}>
                    <div className="RSFImageSwitcher-viewerOverlay-160">
                      <ReactPinchZoomPan maxScale={3} render={[Function: render]} initialScale={1}>
                        <div>
                          <div style={{...}}>
                            <div style={{...}}>
                              <img src="/a.jpg" alt="product" style={{...}} />
                            </div>
                          </div>
                        </div>
                      </ReactPinchZoomPan>
                    </div>
                  </Portal>
                </Portal>
                <div onClick={[Function: onClick]} className="RSFImageSwitcher-viewerToggle-158">
                  <svg width="100" height="100" viewBox="0 0 100 100">
                    <line x1="50" y1="25" x2="50" y2="75" strokeWidth="4" stroke="white" />
                    <line x1="25" y1="50" x2="75" y2="50" strokeWidth="4" stroke="white" />
                  </svg>
                </div>
              </div>
            </div>
          </ImageSwitcher>
        </inject-ImageSwitcher-with-app>
      </WithStyles(inject-ImageSwitcher-with-app)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`ImageSwitcher should render indicator dots 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-ImageSwitcher-with-app) images={{...}} showIndicators={true}>
        <inject-ImageSwitcher-with-app images={{...}} showIndicators={true} classes={{...}}>
          <ImageSwitcher images={{...}} showIndicators={true} classes={{...}} app={{...}} thumbnails={{...}} viewerThumbnailsOnly={false} arrows={true} indicators={false} loadingThumbnailProps={{...}} imageProps={{...}} resetSelectionWhenImagesChange={false} reactPinchZoomPanOptions={{...}}>
            <div className="RSFImageSwitcher-root-195" style={[undefined]}>
              <div className="RSFImageSwitcher-swipeWrap-196">
                <ReactSwipableView index={0} onChangeIndex={[Function: onChangeIndex]} animateHeight={false} animateTransitions={true} axis="x" disabled={false} disableLazyLoading={false} enableMouseEvents={false} hysteresis={0.6} ignoreNativeScroll={false} threshold={5} springConfig={{...}} resistance={false}>
                  <div style={{...}} onTouchStart={[Function]} onTouchEnd={[Function]} onScroll={[Function]}>
                    <div style={{...}} className="react-swipeable-view-container">
                      <div style={{...}} className={[undefined]} aria-hidden={false} data-swipeable="true">
                        <div className="RSFImageSwitcher-imageWrap-197">
                          <WithStyles(inject-Image) notFoundSrc={[undefined]} src="/a.jpg" alt="product" onLoad={[Function]}>
                            <inject-Image notFoundSrc={[undefined]} src="/a.jpg" alt="product" onLoad={[Function]} classes={{...}}>
                              <Image notFoundSrc={[undefined]} src="/a.jpg" alt="product" onLoad={[Function]} classes={{...}} amp={false} quality={{...}} contain={false} fill={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                <div className="RSFImage-root-220">
                                  <img src="/a.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt="product" onLoad={[Function]} onError={[Function]} />
                                </div>
                              </Image>
                            </inject-Image>
                          </WithStyles(inject-Image)>
                        </div>
                      </div>
                    </div>
                  </div>
                </ReactSwipableView>
                <div className="RSFImageSwitcher-arrows-204">
                  <WithStyles(IconButton) className="RSFImageSwitcher-arrow-205 RSFImageSwitcher-rightArrow-207" onClick={[Function: onClick]}>
                    <IconButton className="RSFImageSwitcher-arrow-205 RSFImageSwitcher-rightArrow-207" onClick={[Function: onClick]} classes={{...}} color="default" disabled={false}>
                      <WithStyles(ButtonBase) className="MuiIconButton-root-224 RSFImageSwitcher-arrow-205 RSFImageSwitcher-rightArrow-207" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]}>
                        <ButtonBase className="MuiIconButton-root-224 RSFImageSwitcher-arrow-205 RSFImageSwitcher-rightArrow-207" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]} classes={{...}} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                          <button className="MuiButtonBase-root-230 MuiIconButton-root-224 RSFImageSwitcher-arrow-205 RSFImageSwitcher-rightArrow-207" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function: onClick]}>
                            <span className="MuiIconButton-label-229">
                              <pure(ChevronRightIcon) classes={{...}}>
                                <ChevronRightIcon classes={{...}}>
                                  <WithStyles(SvgIcon) classes={{...}}>
                                    <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                      <svg className="MuiSvgIcon-root-233 RSFImageSwitcher-icon-208" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                        <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                        <path fill="none" d="M0 0h24v24H0z" />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ChevronRightIcon>
                              </pure(ChevronRightIcon)>
                            </span>
                            <NoSsr defer={false} fallback={{...}}>
                              <WithStyles(TouchRipple) innerRef={[Function]} center={true}>
                                <TouchRipple center={true} classes={{...}}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-242" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-242" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </NoSsr>
                          </button>
                        </ButtonBase>
                      </WithStyles(ButtonBase)>
                    </IconButton>
                  </WithStyles(IconButton)>
                </div>
                <Portal disablePortal={false}>
                  <Portal containerInfo={{...}}>
                    <div className="RSFImageSwitcher-viewerOverlay-214">
                      <ReactPinchZoomPan maxScale={3} render={[Function: render]} initialScale={1}>
                        <div>
                          <div style={{...}}>
                            <div style={{...}}>
                              <img src="/a.jpg" alt="product" style={{...}} />
                            </div>
                          </div>
                        </div>
                      </ReactPinchZoomPan>
                    </div>
                  </Portal>
                </Portal>
                <div onClick={[Function: onClick]} className="RSFImageSwitcher-viewerToggle-212">
                  <svg width="100" height="100" viewBox="0 0 100 100">
                    <line x1="50" y1="25" x2="50" y2="75" strokeWidth="4" stroke="white" />
                    <line x1="25" y1="50" x2="75" y2="50" strokeWidth="4" stroke="white" />
                  </svg>
                </div>
              </div>
            </div>
          </ImageSwitcher>
        </inject-ImageSwitcher-with-app>
      </WithStyles(inject-ImageSwitcher-with-app)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`ImageSwitcher should render thumbnails 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-ImageSwitcher-with-app) images={{...}} thumbnails={{...}}>
        <inject-ImageSwitcher-with-app images={{...}} thumbnails={{...}} classes={{...}}>
          <ImageSwitcher images={{...}} thumbnails={{...}} classes={{...}} app={{...}} viewerThumbnailsOnly={false} arrows={true} indicators={false} loadingThumbnailProps={{...}} imageProps={{...}} resetSelectionWhenImagesChange={false} reactPinchZoomPanOptions={{...}}>
            <div className="RSFImageSwitcher-root-55" style={[undefined]}>
              <div className="RSFImageSwitcher-swipeWrap-56">
                <ReactSwipableView index={0} onChangeIndex={[Function: onChangeIndex]} animateHeight={false} animateTransitions={true} axis="x" disabled={false} disableLazyLoading={false} enableMouseEvents={false} hysteresis={0.6} ignoreNativeScroll={false} threshold={5} springConfig={{...}} resistance={false}>
                  <div style={{...}} onTouchStart={[Function]} onTouchEnd={[Function]} onScroll={[Function]}>
                    <div style={{...}} className="react-swipeable-view-container">
                      <div style={{...}} className={[undefined]} aria-hidden={false} data-swipeable="true">
                        <div className="RSFImageSwitcher-imageWrap-57">
                          <WithStyles(inject-Image) notFoundSrc={[undefined]} src="/a.jpg" alt="product" onLoad={[Function]}>
                            <inject-Image notFoundSrc={[undefined]} src="/a.jpg" alt="product" onLoad={[Function]} classes={{...}}>
                              <Image notFoundSrc={[undefined]} src="/a.jpg" alt="product" onLoad={[Function]} classes={{...}} amp={false} quality={{...}} contain={false} fill={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                <div className="RSFImage-root-80">
                                  <img src="/a.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt="product" onLoad={[Function]} onError={[Function]} />
                                </div>
                              </Image>
                            </inject-Image>
                          </WithStyles(inject-Image)>
                        </div>
                      </div>
                    </div>
                  </div>
                </ReactSwipableView>
                <div className="RSFImageSwitcher-arrows-64">
                  <WithStyles(IconButton) className="RSFImageSwitcher-arrow-65 RSFImageSwitcher-rightArrow-67" onClick={[Function: onClick]}>
                    <IconButton className="RSFImageSwitcher-arrow-65 RSFImageSwitcher-rightArrow-67" onClick={[Function: onClick]} classes={{...}} color="default" disabled={false}>
                      <WithStyles(ButtonBase) className="MuiIconButton-root-84 RSFImageSwitcher-arrow-65 RSFImageSwitcher-rightArrow-67" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]}>
                        <ButtonBase className="MuiIconButton-root-84 RSFImageSwitcher-arrow-65 RSFImageSwitcher-rightArrow-67" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]} classes={{...}} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                          <button className="MuiButtonBase-root-90 MuiIconButton-root-84 RSFImageSwitcher-arrow-65 RSFImageSwitcher-rightArrow-67" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function: onClick]}>
                            <span className="MuiIconButton-label-89">
                              <pure(ChevronRightIcon) classes={{...}}>
                                <ChevronRightIcon classes={{...}}>
                                  <WithStyles(SvgIcon) classes={{...}}>
                                    <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                      <svg className="MuiSvgIcon-root-93 RSFImageSwitcher-icon-68" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                        <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                        <path fill="none" d="M0 0h24v24H0z" />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ChevronRightIcon>
                              </pure(ChevronRightIcon)>
                            </span>
                            <NoSsr defer={false} fallback={{...}}>
                              <WithStyles(TouchRipple) innerRef={[Function]} center={true}>
                                <TouchRipple center={true} classes={{...}}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-134" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-134" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </NoSsr>
                          </button>
                        </ButtonBase>
                      </WithStyles(ButtonBase)>
                    </IconButton>
                  </WithStyles(IconButton)>
                </div>
                <Portal disablePortal={false}>
                  <Portal containerInfo={{...}}>
                    <div className="RSFImageSwitcher-viewerOverlay-74">
                      <ReactPinchZoomPan maxScale={3} render={[Function: render]} initialScale={1}>
                        <div>
                          <div style={{...}}>
                            <div style={{...}}>
                              <img src="/a.jpg" alt="product" style={{...}} />
                            </div>
                          </div>
                        </div>
                      </ReactPinchZoomPan>
                    </div>
                  </Portal>
                </Portal>
                <div onClick={[Function: onClick]} className="RSFImageSwitcher-viewerToggle-72">
                  <svg width="100" height="100" viewBox="0 0 100 100">
                    <line x1="50" y1="25" x2="50" y2="75" strokeWidth="4" stroke="white" />
                    <line x1="25" y1="50" x2="75" y2="50" strokeWidth="4" stroke="white" />
                  </svg>
                </div>
              </div>
              <div className="RSFImageSwitcher-thumbs-60">
                <div className="field">
                  <label className="RSFImageSwitcher-thumbsTitle-58" />
                </div>
                <WithStyles(inject-TabsRow-with-app) classes={{...}} imageProps={{...}} centered={true} initialSelectedIdx={0} onTabChange={[Function: onTabChange]} items={{...}}>
                  <inject-TabsRow-with-app imageProps={{...}} centered={true} initialSelectedIdx={0} onTabChange={[Function: onTabChange]} items={{...}} classes={{...}}>
                    <TabsRow imageProps={{...}} centered={true} initialSelectedIdx={0} onTabChange={[Function: onTabChange]} items={{...}} classes={{...}} app={{...}} variant="scrollable">
                      <WithStyles(Tabs) value={0} onChange={[Function]} indicatorColor="secondary" variant="scrollable" className="RSFTabsRow-root-104 RSFImageSwitcher-tabsRowRoot-76" classes={{...}}>
                        <Tabs value={0} onChange={[Function]} indicatorColor="secondary" variant="scrollable" className="RSFTabsRow-root-104 RSFImageSwitcher-tabsRowRoot-76" theme={{...}} classes={{...}} centered={false} component="div" fullWidth={false} scrollable={false} ScrollButtonComponent={[Function: WithStyles]} scrollButtons="auto" textColor="inherit">
                          <div className="MuiTabs-root-110 RSFTabsRow-root-104 RSFImageSwitcher-tabsRowRoot-76 RSFTabsRow-root-104 RSFImageSwitcher-tabsRowRoot-76" variant="scrollable">
                            <EventListener target="window" onResize={[Function: debounced]} />
                            <div className="MuiTabs-flexContainer-111 RSFTabsRow-centered-109">
                              <div className="MuiTabs-scroller-113 RSFTabsRow-scroller-107 RSFImageSwitcher-tabScroller-77 MuiTabs-fixed-114" style={{...}} role="tablist" onScroll={[Function: debounced]}>
                                <div className="MuiTabs-flexContainer-111 RSFTabsRow-centered-109">
                                  <WithStyles(Tab) label={[undefined]} icon={{...}} classes={{...}} fullWidth={false} indicator={false} selected={true} onChange={[Function]} textColor="inherit" value={0}>
                                    <Tab label={[undefined]} icon={{...}} fullWidth={false} indicator={false} selected={true} onChange={[Function]} textColor="inherit" value={0} classes={{...}} disabled={false}>
                                      <WithStyles(ButtonBase) focusRipple={true} className="MuiTab-root-119 RSFTabsRow-tab-105 MuiTab-textColorInherit-121 MuiTab-selected-124 RSFTabsRow-selectedTab-106" role="tab" aria-selected={true} disabled={false} onClick={[Function]}>
                                        <ButtonBase focusRipple={true} className="MuiTab-root-119 RSFTabsRow-tab-105 MuiTab-textColorInherit-121 MuiTab-selected-124 RSFTabsRow-selectedTab-106" role="tab" aria-selected={true} disabled={false} onClick={[Function]} classes={{...}} centerRipple={false} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                                          <button className="MuiButtonBase-root-90 MuiTab-root-119 RSFTabsRow-tab-105 MuiTab-textColorInherit-121 MuiTab-selected-124 RSFTabsRow-selectedTab-106" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} role="tab" aria-selected={true} onClick={[Function]}>
                                            <span className="MuiTab-wrapper-127">
                                              <WithStyles(inject-Image) src="/at.jpg" alt="thumbnail" className="RSFImageSwitcher-thumbnail-61" notFoundSrc={[undefined]} fill={true}>
                                                <inject-Image src="/at.jpg" alt="thumbnail" className="RSFImageSwitcher-thumbnail-61" notFoundSrc={[undefined]} fill={true} classes={{...}}>
                                                  <Image src="/at.jpg" alt="thumbnail" className="RSFImageSwitcher-thumbnail-61" notFoundSrc={[undefined]} fill={true} classes={{...}} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                                    <div className="RSFImageSwitcher-thumbnail-61 RSFImage-root-80 RSFImage-fill-83">
                                                      <img src="/at.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt="thumbnail" onError={[Function]} />
                                                    </div>
                                                  </Image>
                                                </inject-Image>
                                              </WithStyles(inject-Image)>
                                            </span>
                                            <NoSsr defer={false} fallback={{...}}>
                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                <TouchRipple center={false} classes={{...}}>
                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-134" childFactory={[Function: childFactory]}>
                                                    <span className="MuiTouchRipple-root-134" />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </button>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Tab>
                                  </WithStyles(Tab)>
                                  <WithStyles(Tab) label={[undefined]} icon={{...}} classes={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={1}>
                                    <Tab label={[undefined]} icon={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={1} classes={{...}} disabled={false}>
                                      <WithStyles(ButtonBase) focusRipple={true} className="MuiTab-root-119 RSFTabsRow-tab-105 MuiTab-textColorInherit-121" role="tab" aria-selected={false} disabled={false} onClick={[Function]}>
                                        <ButtonBase focusRipple={true} className="MuiTab-root-119 RSFTabsRow-tab-105 MuiTab-textColorInherit-121" role="tab" aria-selected={false} disabled={false} onClick={[Function]} classes={{...}} centerRipple={false} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                                          <button className="MuiButtonBase-root-90 MuiTab-root-119 RSFTabsRow-tab-105 MuiTab-textColorInherit-121" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} role="tab" aria-selected={false} onClick={[Function]}>
                                            <span className="MuiTab-wrapper-127">
                                              <WithStyles(inject-Image) src="/bt.jpg" alt="thumbnail" className="RSFImageSwitcher-thumbnail-61" notFoundSrc={[undefined]} fill={true}>
                                                <inject-Image src="/bt.jpg" alt="thumbnail" className="RSFImageSwitcher-thumbnail-61" notFoundSrc={[undefined]} fill={true} classes={{...}}>
                                                  <Image src="/bt.jpg" alt="thumbnail" className="RSFImageSwitcher-thumbnail-61" notFoundSrc={[undefined]} fill={true} classes={{...}} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                                    <div className="RSFImageSwitcher-thumbnail-61 RSFImage-root-80 RSFImage-fill-83">
                                                      <img src="/bt.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt="thumbnail" onError={[Function]} />
                                                    </div>
                                                  </Image>
                                                </inject-Image>
                                              </WithStyles(inject-Image)>
                                            </span>
                                            <NoSsr defer={false} fallback={{...}}>
                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                <TouchRipple center={false} classes={{...}}>
                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-134" childFactory={[Function: childFactory]}>
                                                    <span className="MuiTouchRipple-root-134" />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </button>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Tab>
                                  </WithStyles(Tab)>
                                  <WithStyles(Tab) label={[undefined]} icon={{...}} classes={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={2}>
                                    <Tab label={[undefined]} icon={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={2} classes={{...}} disabled={false}>
                                      <WithStyles(ButtonBase) focusRipple={true} className="MuiTab-root-119 RSFTabsRow-tab-105 MuiTab-textColorInherit-121" role="tab" aria-selected={false} disabled={false} onClick={[Function]}>
                                        <ButtonBase focusRipple={true} className="MuiTab-root-119 RSFTabsRow-tab-105 MuiTab-textColorInherit-121" role="tab" aria-selected={false} disabled={false} onClick={[Function]} classes={{...}} centerRipple={false} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                                          <button className="MuiButtonBase-root-90 MuiTab-root-119 RSFTabsRow-tab-105 MuiTab-textColorInherit-121" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} role="tab" aria-selected={false} onClick={[Function]}>
                                            <span className="MuiTab-wrapper-127">
                                              <WithStyles(inject-Image) src="/ct.jpg" alt="thumbnail" className="RSFImageSwitcher-thumbnail-61" notFoundSrc={[undefined]} fill={true}>
                                                <inject-Image src="/ct.jpg" alt="thumbnail" className="RSFImageSwitcher-thumbnail-61" notFoundSrc={[undefined]} fill={true} classes={{...}}>
                                                  <Image src="/ct.jpg" alt="thumbnail" className="RSFImageSwitcher-thumbnail-61" notFoundSrc={[undefined]} fill={true} classes={{...}} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                                    <div className="RSFImageSwitcher-thumbnail-61 RSFImage-root-80 RSFImage-fill-83">
                                                      <img src="/ct.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt="thumbnail" onError={[Function]} />
                                                    </div>
                                                  </Image>
                                                </inject-Image>
                                              </WithStyles(inject-Image)>
                                            </span>
                                            <NoSsr defer={false} fallback={{...}}>
                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                <TouchRipple center={false} classes={{...}}>
                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-134" childFactory={[Function: childFactory]}>
                                                    <span className="MuiTouchRipple-root-134" />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </button>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Tab>
                                  </WithStyles(Tab)>
                                </div>
                                <WithStyles(TabIndicator) className="MuiTabs-indicator-118 RSFTabsRow-indicator-102" color="secondary" style={{...}}>
                                  <TabIndicator className="MuiTabs-indicator-118 RSFTabsRow-indicator-102" color="secondary" style={{...}} classes={{...}}>
                                    <span className="MuiPrivateTabIndicator-root-131 MuiPrivateTabIndicator-colorSecondary-133 MuiTabs-indicator-118 RSFTabsRow-indicator-102" style={{...}} />
                                  </TabIndicator>
                                </WithStyles(TabIndicator)>
                              </div>
                            </div>
                          </div>
                        </Tabs>
                      </WithStyles(Tabs)>
                    </TabsRow>
                  </inject-TabsRow-with-app>
                </WithStyles(inject-TabsRow-with-app)>
              </div>
            </div>
          </ImageSwitcher>
        </inject-ImageSwitcher-with-app>
      </WithStyles(inject-ImageSwitcher-with-app)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;
